//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/march/Documents/Projects/PDDL-Parser/src/PDDLParser/Grammar/Pddl.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AIInGames.Planning.PDDL.Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PddlParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPddlVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.pddlDoc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPddlDoc([NotNull] PddlParser.PddlDocContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.domain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDomain([NotNull] PddlParser.DomainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.requireDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequireDef([NotNull] PddlParser.RequireDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.typesDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypesDef([NotNull] PddlParser.TypesDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.predicatesDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicatesDef([NotNull] PddlParser.PredicatesDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.actionDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionDef([NotNull] PddlParser.ActionDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.problem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProblem([NotNull] PddlParser.ProblemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.objectDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectDecl([NotNull] PddlParser.ObjectDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInit([NotNull] PddlParser.InitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.initEl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitEl([NotNull] PddlParser.InitElContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.goal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoal([NotNull] PddlParser.GoalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalSimple</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalSimple([NotNull] PddlParser.GoalSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalAnd</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalAnd([NotNull] PddlParser.GoalAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalOr</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalOr([NotNull] PddlParser.GoalOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalNot</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalNot([NotNull] PddlParser.GoalNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalImply</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalImply([NotNull] PddlParser.GoalImplyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalExists</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalExists([NotNull] PddlParser.GoalExistsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GoalForall</c>
	/// labeled alternative in <see cref="PddlParser.goalDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoalForall([NotNull] PddlParser.GoalForallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EffectAnd</c>
	/// labeled alternative in <see cref="PddlParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEffectAnd([NotNull] PddlParser.EffectAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EffectSimple</c>
	/// labeled alternative in <see cref="PddlParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEffectSimple([NotNull] PddlParser.EffectSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CEffectForall</c>
	/// labeled alternative in <see cref="PddlParser.cEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCEffectForall([NotNull] PddlParser.CEffectForallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CEffectWhen</c>
	/// labeled alternative in <see cref="PddlParser.cEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCEffectWhen([NotNull] PddlParser.CEffectWhenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CEffectSimple</c>
	/// labeled alternative in <see cref="PddlParser.cEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCEffectSimple([NotNull] PddlParser.CEffectSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.condEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondEffect([NotNull] PddlParser.CondEffectContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PEffectNot</c>
	/// labeled alternative in <see cref="PddlParser.pEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPEffectNot([NotNull] PddlParser.PEffectNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PEffectPos</c>
	/// labeled alternative in <see cref="PddlParser.pEffect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPEffectPos([NotNull] PddlParser.PEffectPosContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.atomicFormulaSkeleton"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomicFormulaSkeleton([NotNull] PddlParser.AtomicFormulaSkeletonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.atomicFormula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomicFormula([NotNull] PddlParser.AtomicFormulaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] PddlParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] PddlParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicate([NotNull] PddlParser.PredicateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.typedVariableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedVariableList([NotNull] PddlParser.TypedVariableListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.singleTypeVarList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleTypeVarList([NotNull] PddlParser.SingleTypeVarListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.typedNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedNameList([NotNull] PddlParser.TypedNameListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.singleTypeNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleTypeNameList([NotNull] PddlParser.SingleTypeNameListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] PddlParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] PddlParser.PrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] PddlParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] PddlParser.NameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PddlParser.requireKey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequireKey([NotNull] PddlParser.RequireKeyContext context);
}
} // namespace AIInGames.Planning.PDDL.Generated
